
val df = spark.read.format("json").load("imoveis/imoveis.json")

df.printSchema
root
 |-- ident: struct (nullable = true)
 |    |-- customerID: string (nullable = true)
 |    |-- source: string (nullable = true)
 |-- listing: struct (nullable = true)
 |    |-- address: struct (nullable = true)
 |    |    |-- city: string (nullable = true)
 |    |    |-- location: struct (nullable = true)
 |    |    |    |-- lat: double (nullable = true)
 |    |    |    |-- lon: double (nullable = true)
 |    |    |-- neighborhood: string (nullable = true)
 |    |    |-- zone: string (nullable = true)
 |    |-- features: struct (nullable = true)
 |    |    |-- bathrooms: long (nullable = true)
 |    |    |-- bedrooms: long (nullable = true)
 |    |    |-- floors: long (nullable = true)
 |    |    |-- parkingSpaces: long (nullable = true)
 |    |    |-- suites: long (nullable = true)
 |    |    |-- totalAreas: string (nullable = true)
 |    |    |-- unitFloor: long (nullable = true)
 |    |    |-- unitsOnTheFloor: long (nullable = true)
 |    |    |-- usableAreas: string (nullable = true)
 |    |-- prices: struct (nullable = true)
 |    |    |-- price: string (nullable = true)
 |    |    |-- tax: struct (nullable = true)
 |    |    |    |-- condo: string (nullable = true)
 |    |    |    |-- iptu: string (nullable = true)
 |    |-- types: struct (nullable = true)
 |    |    |-- unit: string (nullable = true)
 |    |    |-- usage: string (nullable = true)
 
df.show(10, false)
+--------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+
|ident                     |listing                                                                                                                                                          |
+--------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+
|[775564-BOJSMVON, Website]|[[Rio de Janeiro, [-22.909429, -43.413557], Taquara, Zona Oeste], [0, 0, 0, 1, 0, 62, 0, 0, 62], [45000, [150, 0]], [Outros, Residencial]]                       |
|[660895-AUENKNYY, Website]|[[Rio de Janeiro, [-22.869698, -43.509141], Santíssimo, Zona Oeste], [1, 2, 0, 1, 0, 0, 0, 0, 44], [45000, [120, 0]], [Apartamento, Residencial]]                |
|[751522-JESYFEQL, Website]|[[Rio de Janeiro, [-22.986927, -43.646786], Pedra de Guaratiba, Zona Oeste], [0, 0, 0, 0, 0, 132, 0, 0, 132], [50000, [100, 0]], [Outros, Residencial]]          |
|[714052-GAAEWYKS, Website]|[[Rio de Janeiro, [-22.881977, -43.330818], Cascadura, Zona Norte], [1, 0, 0, 0, 0, 32, 3, 0, 32], [45000, [468, 346]], [Outros, Comercial]]                     |
|[568886-ZIBFOMCC, Website]|[[Rio de Janeiro, [-23.027653, -43.480742], Recreio dos Bandeirantes, Zona Oeste], [2, 3, 3, 1, 1, 0, 2, 4, 60], [50000, [400, 120]], [Apartamento, Residencial]]|
|[526755-OBLTYTEN, Website]|[[Rio de Janeiro, [-22.966059, -43.571183], Guaratiba, Zona Oeste], [0, 0, 0, 0, 0, 200, 0, 0, 200], [50000, [0,]], [Outros, Residencial]]                       |
|[593569-CJLMNFGW, Website]|[[Rio de Janeiro, [-22.939028, -43.3453], Freguesia (Jacarepaguá), Zona Oeste], [1, 0, 0, 0, 0, 25, 2, 0, 25], [50000, [801, 211]], [Outros, Comercial]]         |
|[989181-RYJOLMCU, Website]|[[Rio de Janeiro, [-22.841509, -43.278855], Penha, Zona Norte], [1, 0, 0, 0, 0, 23, 0, 0, 23], [50000, [230,]], [Outros, Comercial]]                             |
|[145372-EZKAKSWM, Website]|[[Rio de Janeiro, [-22.835609, -43.392253], Ricardo de Albuquerque, Zona Norte], [0, 0, 0, 0, 0, 60, 0, 0, 60], [45000, [,]], [Outros, Comercial]]               |
|[792086-NWNQTDYL, Website]|[[Rio de Janeiro, [-22.885306, -43.253044], Jacarezinho, Zona Norte], [1, 1, 0, 1, 0, 35, 0, 0, 33], [45336, [0, 0]], [Apartamento, Residencial]]                |
+--------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+
only showing top 10 rows


df.select("ident.customerID", "listing.*").show(10, false)
+---------------+--------------------------------------------------------------------------------+-------------------------------+-------------------+--------------------------+
|customerID     |address                                                                         |features                       |prices             |types                     |
+---------------+--------------------------------------------------------------------------------+-------------------------------+-------------------+--------------------------+
|775564-BOJSMVON|[Rio de Janeiro, [-22.909429, -43.413557], Taquara, Zona Oeste]                 |[0, 0, 0, 1, 0, 62, 0, 0, 62]  |[45000, [150, 0]]  |[Outros, Residencial]     |
|660895-AUENKNYY|[Rio de Janeiro, [-22.869698, -43.509141], Santíssimo, Zona Oeste]              |[1, 2, 0, 1, 0, 0, 0, 0, 44]   |[45000, [120, 0]]  |[Apartamento, Residencial]|
|751522-JESYFEQL|[Rio de Janeiro, [-22.986927, -43.646786], Pedra de Guaratiba, Zona Oeste]      |[0, 0, 0, 0, 0, 132, 0, 0, 132]|[50000, [100, 0]]  |[Outros, Residencial]     |
|714052-GAAEWYKS|[Rio de Janeiro, [-22.881977, -43.330818], Cascadura, Zona Norte]               |[1, 0, 0, 0, 0, 32, 3, 0, 32]  |[45000, [468, 346]]|[Outros, Comercial]       |
|568886-ZIBFOMCC|[Rio de Janeiro, [-23.027653, -43.480742], Recreio dos Bandeirantes, Zona Oeste]|[2, 3, 3, 1, 1, 0, 2, 4, 60]   |[50000, [400, 120]]|[Apartamento, Residencial]|
|526755-OBLTYTEN|[Rio de Janeiro, [-22.966059, -43.571183], Guaratiba, Zona Oeste]               |[0, 0, 0, 0, 0, 200, 0, 0, 200]|[50000, [0,]]      |[Outros, Residencial]     |
|593569-CJLMNFGW|[Rio de Janeiro, [-22.939028, -43.3453], Freguesia (Jacarepaguá), Zona Oeste]   |[1, 0, 0, 0, 0, 25, 2, 0, 25]  |[50000, [801, 211]]|[Outros, Comercial]       |
|989181-RYJOLMCU|[Rio de Janeiro, [-22.841509, -43.278855], Penha, Zona Norte]                   |[1, 0, 0, 0, 0, 23, 0, 0, 23]  |[50000, [230,]]    |[Outros, Comercial]       |
|145372-EZKAKSWM|[Rio de Janeiro, [-22.835609, -43.392253], Ricardo de Albuquerque, Zona Norte]  |[0, 0, 0, 0, 0, 60, 0, 0, 60]  |[45000, [,]]       |[Outros, Comercial]       |
|792086-NWNQTDYL|[Rio de Janeiro, [-22.885306, -43.253044], Jacarezinho, Zona Norte]             |[1, 1, 0, 1, 0, 35, 0, 0, 33]  |[45336, [0, 0]]    |[Apartamento, Residencial]|
+---------------+--------------------------------------------------------------------------------+-------------------------------+-------------------+--------------------------+
only showing top 10 rows


df.select("ident.customerID", "listing.address.*", "listing.features.*", "listing.prices.*", "listing.types.*").show(10, false)
+---------------+--------------+------------------------+------------------------+----------+---------+--------+------+-------------+------+----------+---------+---------------+-----------+-----+----------+-----------+-----------+
|customerID     |city          |location                |neighborhood            |zone      |bathrooms|bedrooms|floors|parkingSpaces|suites|totalAreas|unitFloor|unitsOnTheFloor|usableAreas|price|tax       |unit       |usage      |
+---------------+--------------+------------------------+------------------------+----------+---------+--------+------+-------------+------+----------+---------+---------------+-----------+-----+----------+-----------+-----------+
|775564-BOJSMVON|Rio de Janeiro|[-22.909429, -43.413557]|Taquara                 |Zona Oeste|0        |0       |0     |1            |0     |62        |0        |0              |62         |45000|[150, 0]  |Outros     |Residencial|
|660895-AUENKNYY|Rio de Janeiro|[-22.869698, -43.509141]|Santíssimo              |Zona Oeste|1        |2       |0     |1            |0     |0         |0        |0              |44         |45000|[120, 0]  |Apartamento|Residencial|
|751522-JESYFEQL|Rio de Janeiro|[-22.986927, -43.646786]|Pedra de Guaratiba      |Zona Oeste|0        |0       |0     |0            |0     |132       |0        |0              |132        |50000|[100, 0]  |Outros     |Residencial|
|714052-GAAEWYKS|Rio de Janeiro|[-22.881977, -43.330818]|Cascadura               |Zona Norte|1        |0       |0     |0            |0     |32        |3        |0              |32         |45000|[468, 346]|Outros     |Comercial  |
|568886-ZIBFOMCC|Rio de Janeiro|[-23.027653, -43.480742]|Recreio dos Bandeirantes|Zona Oeste|2        |3       |3     |1            |1     |0         |2        |4              |60         |50000|[400, 120]|Apartamento|Residencial|
|526755-OBLTYTEN|Rio de Janeiro|[-22.966059, -43.571183]|Guaratiba               |Zona Oeste|0        |0       |0     |0            |0     |200       |0        |0              |200        |50000|[0,]      |Outros     |Residencial|
|593569-CJLMNFGW|Rio de Janeiro|[-22.939028, -43.3453]  |Freguesia (Jacarepaguá) |Zona Oeste|1        |0       |0     |0            |0     |25        |2        |0              |25         |50000|[801, 211]|Outros     |Comercial  |
|989181-RYJOLMCU|Rio de Janeiro|[-22.841509, -43.278855]|Penha                   |Zona Norte|1        |0       |0     |0            |0     |23        |0        |0              |23         |50000|[230,]    |Outros     |Comercial  |
|145372-EZKAKSWM|Rio de Janeiro|[-22.835609, -43.392253]|Ricardo de Albuquerque  |Zona Norte|0        |0       |0     |0            |0     |60        |0        |0              |60         |45000|[,]       |Outros     |Comercial  |
|792086-NWNQTDYL|Rio de Janeiro|[-22.885306, -43.253044]|Jacarezinho             |Zona Norte|1        |1       |0     |1            |0     |35        |0        |0              |33         |45336|[0, 0]    |Apartamento|Residencial|
+---------------+--------------+------------------------+------------------------+----------+---------+--------+------+-------------+------+----------+---------+---------------+-----------+-----+----------+-----------+-----------+
only showing top 10 rows


val df1 = df.select("ident.customerID", "listing.address.*", "listing.features.*", "listing.prices.*", "listing.types.*").
          drop("city", "location", "tax", "totalAreas")
		  
df1.printSchema
root
 |-- customerID: string (nullable = true)
 |-- neighborhood: string (nullable = true)
 |-- zone: string (nullable = true)
 |-- bathrooms: long (nullable = true)
 |-- bedrooms: long (nullable = true)
 |-- floors: long (nullable = true)
 |-- parkingSpaces: long (nullable = true)
 |-- suites: long (nullable = true)
 |-- unitFloor: long (nullable = true)
 |-- unitsOnTheFloor: long (nullable = true)
 |-- usableAreas: string (nullable = true)
 |-- price: string (nullable = true)
 |-- unit: string (nullable = true)
 |-- usage: string (nullable = true)

df1.show(10, false)
+---------------+------------------------+----------+---------+--------+------+-------------+------+---------+---------------+-----------+-----+-----------+-----------+
|customerID     |neighborhood            |zone      |bathrooms|bedrooms|floors|parkingSpaces|suites|unitFloor|unitsOnTheFloor|usableAreas|price|unit       |usage      |
+---------------+------------------------+----------+---------+--------+------+-------------+------+---------+---------------+-----------+-----+-----------+-----------+
|775564-BOJSMVON|Taquara                 |Zona Oeste|0        |0       |0     |1            |0     |0        |0              |62         |45000|Outros     |Residencial|
|660895-AUENKNYY|Santíssimo              |Zona Oeste|1        |2       |0     |1            |0     |0        |0              |44         |45000|Apartamento|Residencial|
|751522-JESYFEQL|Pedra de Guaratiba      |Zona Oeste|0        |0       |0     |0            |0     |0        |0              |132        |50000|Outros     |Residencial|
|714052-GAAEWYKS|Cascadura               |Zona Norte|1        |0       |0     |0            |0     |3        |0              |32         |45000|Outros     |Comercial  |
|568886-ZIBFOMCC|Recreio dos Bandeirantes|Zona Oeste|2        |3       |3     |1            |1     |2        |4              |60         |50000|Apartamento|Residencial|
|526755-OBLTYTEN|Guaratiba               |Zona Oeste|0        |0       |0     |0            |0     |0        |0              |200        |50000|Outros     |Residencial|
|593569-CJLMNFGW|Freguesia (Jacarepaguá) |Zona Oeste|1        |0       |0     |0            |0     |2        |0              |25         |50000|Outros     |Comercial  |
|989181-RYJOLMCU|Penha                   |Zona Norte|1        |0       |0     |0            |0     |0        |0              |23         |50000|Outros     |Comercial  |
|145372-EZKAKSWM|Ricardo de Albuquerque  |Zona Norte|0        |0       |0     |0            |0     |0        |0              |60         |45000|Outros     |Comercial  |
|792086-NWNQTDYL|Jacarezinho             |Zona Norte|1        |1       |0     |1            |0     |0        |0              |33         |45336|Apartamento|Residencial|
+---------------+------------------------+----------+---------+--------+------+-------------+------+---------+---------------+-----------+-----+-----------+-----------+
only showing top 10 rows


df1.describe().show
+-------+---------------+--------------------+--------+------------------+------------------+------------------+------------------+------------------+------------------+------------------+------------------+------------------+-----------+-----------+
|summary|     customerID|        neighborhood|    zone|         bathrooms|          bedrooms|            floors|     parkingSpaces|            suites|         unitFloor|   unitsOnTheFloor|       usableAreas|             price|       unit|      usage|
+-------+---------------+--------------------+--------+------------------+------------------+------------------+------------------+------------------+------------------+------------------+------------------+------------------+-----------+-----------+
|  count|          73615|               73615|   73615|             73615|             73615|             73615|             73615|             73615|             73615|             73615|             73615|             73615|      73615|      73615|
|   mean|           null|                null|    null| 2.372396929973511|2.5739726957821096|1.9319432180941385|1.4089112273313862|1.0746586972763703|1.4935135502275352|1.2205121238877945|141.54435916593084|1210759.3738232697|       null|       null|
| stddev|           null|                null|    null|1.5335566495971622|1.2810913473064494| 4.528961565493774|1.7273581137467433|1.1773235036359209|13.117323714945186| 3.413755491536239|146.73695217489413|1384724.6534532323|       null|       null|
|    min|000002-EJVWXGWN|            Abolição|        |                 0|                 0|                 0|                 0|                 0|                 0|                 0|                 0|            100000|Apartamento|  Comercial|
|    max|999985-GKNJELHM|Área Rural de Rio...|Zona Sul|                49|                50|                50|               180|                50|              1234|                76|               999|           9999999|     Outros|Residencial|
+-------+---------------+--------------------+--------+------------------+------------------+------------------+------------------+------------------+------------------+------------------+------------------+------------------+-----------+-----------+

df1.groupBy("usage").count.show
+-----------+-----+
|      usage|count|
+-----------+-----+
|  Comercial| 4019|
|Residencial|69596|
+-----------+-----+

// consider only residential

import org.apache.spark.sql.types._

val df2 = df1.where('usage === "Residencial").
          withColumn("usableAreas", 'usableAreas.cast(LongType)).
          withColumn("price", 'price.cast(DoubleType))
		  
df2.printSchema
root
 |-- customerID: string (nullable = true)
 |-- neighborhood: string (nullable = true)
 |-- zone: string (nullable = true)
 |-- bathrooms: long (nullable = true)
 |-- bedrooms: long (nullable = true)
 |-- floors: long (nullable = true)
 |-- parkingSpaces: long (nullable = true)
 |-- suites: long (nullable = true)
 |-- unitFloor: long (nullable = true)
 |-- unitsOnTheFloor: long (nullable = true)
 |-- usableAreas: long (nullable = true)
 |-- price: double (nullable = true)
 |-- unit: string (nullable = true)
 |-- usage: string (nullable = true)
 

df2.groupBy("zone").count.show
+------------+-----+
|        zone|count|
+------------+-----+
|  Zona Norte|14379|
|  Zona Oeste|35523|
|Zona Central| 1002|
|    Zona Sul|18535|
|            |  157|
+------------+-----+

// remove records with zone not defined

val df3 = df2.where('zone =!= "").drop("usage").
             withColumnRenamed("price", "label")
								 
df3.printSchema
root
 |-- customerID: string (nullable = true)
 |-- neighborhood: string (nullable = true)
 |-- zone: string (nullable = true)
 |-- bathrooms: long (nullable = true)
 |-- bedrooms: long (nullable = true)
 |-- floors: long (nullable = true)
 |-- parkingSpaces: long (nullable = true)
 |-- suites: long (nullable = true)
 |-- unitFloor: long (nullable = true)
 |-- unitsOnTheFloor: long (nullable = true)
 |-- usableAreas: long (nullable = true)
 |-- label: double (nullable = true)
 |-- unit: string (nullable = true)

 
df3.groupBy("unit").count.show
+-----------+-----+
|       unit|count|
+-----------+-----+
|     Outros| 1186|
|Apartamento|58980|
|       Casa| 9273|
+-----------+-----+


import org.apache.spark.ml.feature.{StringIndexer, OneHotEncoder, VectorAssembler}

val dfrawIndexer1 = new StringIndexer().setInputCol("unit").setOutputCol("unitCat")
val dfrawIndexer2 = new StringIndexer().setInputCol("zone").setOutputCol("zoneCat")

val dfrawIndexer11 = new OneHotEncoder().setInputCol("unitCat").setOutputCol("unitVect")
val dfrawIndexer21 = new OneHotEncoder().setInputCol("zoneCat").setOutputCol("zoneVect")

val va = new VectorAssembler().setOutputCol("features").setInputCols(Array("bathrooms","bedrooms","floors","parkingSpaces","suites","unitFloor","unitsOnTheFloor","usableAreas","unitVect","zoneVect"))

import org.apache.spark.ml.Pipeline
val pipeline = new Pipeline().setStages(Array(dfrawIndexer1,dfrawIndexer2,dfrawIndexer11,dfrawIndexer21,va))

val df4 = pipeline.fit(df3).transform(df3)

df4.printSchema
root
 |-- customerID: string (nullable = true)
 |-- neighborhood: string (nullable = true)
 |-- zone: string (nullable = true)
 |-- bathrooms: long (nullable = true)
 |-- bedrooms: long (nullable = true)
 |-- floors: long (nullable = true)
 |-- parkingSpaces: long (nullable = true)
 |-- suites: long (nullable = true)
 |-- unitFloor: long (nullable = true)
 |-- unitsOnTheFloor: long (nullable = true)
 |-- usableAreas: long (nullable = true)
 |-- price: double (nullable = true)
 |-- unit: string (nullable = true)
 |-- unitCat: double (nullable = false)
 |-- zoneCat: double (nullable = false)
 |-- unitVect: vector (nullable = true)
 |-- zoneVect: vector (nullable = true)
 |-- features: vector (nullable = true)
 
df4.show(10)
+---------------+--------------------+----------+---------+--------+------+-------------+------+---------+---------------+-----------+-------+-----------+-------+-------+-------------+-------------+--------------------+
|     customerID|        neighborhood|      zone|bathrooms|bedrooms|floors|parkingSpaces|suites|unitFloor|unitsOnTheFloor|usableAreas|  price|       unit|unitCat|zoneCat|     unitVect|     zoneVect|            features|
+---------------+--------------------+----------+---------+--------+------+-------------+------+---------+---------------+-----------+-------+-----------+-------+-------+-------------+-------------+--------------------+
|775564-BOJSMVON|             Taquara|Zona Oeste|        0|       0|     0|            1|     0|        0|              0|         62|45000.0|     Outros|    2.0|    0.0|    (2,[],[])|(3,[0],[1.0])|(13,[3,7,10],[1.0...|
|660895-AUENKNYY|          Santíssimo|Zona Oeste|        1|       2|     0|            1|     0|        0|              0|         44|45000.0|Apartamento|    0.0|    0.0|(2,[0],[1.0])|(3,[0],[1.0])|(13,[0,1,3,7,8,10...|
|751522-JESYFEQL|  Pedra de Guaratiba|Zona Oeste|        0|       0|     0|            0|     0|        0|              0|        132|50000.0|     Outros|    2.0|    0.0|    (2,[],[])|(3,[0],[1.0])|(13,[7,10],[132.0...|
|568886-ZIBFOMCC|Recreio dos Bande...|Zona Oeste|        2|       3|     3|            1|     1|        2|              4|         60|50000.0|Apartamento|    0.0|    0.0|(2,[0],[1.0])|(3,[0],[1.0])|[2.0,3.0,3.0,1.0,...|
|526755-OBLTYTEN|           Guaratiba|Zona Oeste|        0|       0|     0|            0|     0|        0|              0|        200|50000.0|     Outros|    2.0|    0.0|    (2,[],[])|(3,[0],[1.0])|(13,[7,10],[200.0...|
|792086-NWNQTDYL|         Jacarezinho|Zona Norte|        1|       1|     0|            1|     0|        0|              0|         33|45336.0|Apartamento|    0.0|    2.0|(2,[0],[1.0])|(3,[2],[1.0])|(13,[0,1,3,7,8,12...|
|339622-MNZGLKTZ|           Guaratiba|Zona Oeste|        0|       0|     0|            0|     0|        0|              0|        120|45000.0|     Outros|    2.0|    0.0|    (2,[],[])|(3,[0],[1.0])|(13,[7,10],[120.0...|
|952338-SVULQMXR|          Santa Cruz|Zona Oeste|        0|       0|     0|            0|     0|        0|              0|        468|45000.0|     Outros|    2.0|    0.0|    (2,[],[])|(3,[0],[1.0])|(13,[7,10],[468.0...|
|570439-LDICQOXZ|       Vargem Grande|Zona Oeste|        0|       0|     0|            0|     0|        1|              0|        180|50000.0|     Outros|    2.0|    0.0|    (2,[],[])|(3,[0],[1.0])|(13,[5,7,10],[1.0...|
|684023-YTBNKLLO|               Bangu|Zona Oeste|        0|       0|     0|            0|     0|        0|              0|        128|50000.0|     Outros|    2.0|    0.0|    (2,[],[])|(3,[0],[1.0])|(13,[7,10],[128.0...|
+---------------+--------------------+----------+---------+--------+------+-------------+------+---------+---------------+-----------+-------+-----------+-------+-------+-------------+-------------+--------------------+
only showing top 10 rows


// calculate pearson correlation to check multicolinearity

import org.apache.spark.ml.stat.Correlation
import org.apache.spark.ml.linalg.Matrix
import org.apache.spark.sql.Row

val corr = Correlation.corr(df4, "features", "pearson").head match {
   case Row(coeff: Matrix) => coeff
}
corr: org.apache.spark.ml.linalg.Matrix =
1.0                   0.6659108140404633     ... (13 total)
0.6659108140404633    1.0                    ...
-0.04459075411386755  -0.08218400633990317   ...
0.48759044726023026   0.46716126012130704    ...
0.7529278295372207    0.6011992199948905     ...
0.007624254692643414  -0.007161958491290415  ...
-0.10743744458608334  -0.13081443793326178   ...
0.5980727896311432    0.5637502466117856     ...
-0.275457964016695    -0.25833901797305675   ...
0.3430423783411896    0.34996218926364303    ...
0.24234512440839717   0.16382169811637828    ...
-0.0987517575884239   -0.04943252002957333   ...
-0.16249744106600564  -0.1117118654770791    ...


corr.toDense.rowIter.foreach( x => println(x.toString))
[1.0,0.6659108140404633,-0.04459075411386755,0.48759044726023026,0.7529278295372207,0.007624254692643414,-0.10743744458608334,0.5980727896311432,-0.275457964016695,0.3430423783411896,0.24234512440839717,-0.0987517575884239,-0.16249744106600564]
[0.6659108140404633,1.0,-0.08218400633990317,0.46716126012130704,0.6011992199948905,-0.007161958491290415,-0.13081443793326178,0.5637502466117856,-0.25833901797305675,0.34996218926364303,0.16382169811637828,-0.04943252002957333,-0.1117118654770791]
[-0.04459075411386755,-0.08218400633990317,1.0,-0.04848619212363295,-0.04810621410928413,0.12098169964847286,0.7377174223407815,-0.10391684981974374,0.15394701540869826,-0.14208959758542947,-0.031749541741814075,0.017401937350148833,-0.01692629359464072]
[0.48759044726023026,0.46716126012130704,-0.04848619212363295,1.0,0.48498765200933547,0.0037675536989095083,-0.07452651462786448,0.4837318133173261,-0.2527455846177266,0.29332560072857117,0.26798996748531506,-0.17880683968872219,-0.10995657109246244]
[0.7529278295372207,0.6011992199948905,-0.04810621410928413,0.48498765200933547,1.0,0.00520616259920706,-0.09191360058294247,0.5776358344888646,-0.236216910508503,0.28222102385964243,0.3275464785706333,-0.13639782117662738,-0.23031658928206455]
[0.007624254692643414,-0.007161958491290415,0.12098169964847286,0.0037675536989095083,0.00520616259920706,1.0,0.09235873974156737,-0.012748431948435638,0.034673811218226804,-0.03140334035914296,0.007517857899523005,-0.004332638565611953,-0.011111574148280646]
[-0.10743744458608334,-0.13081443793326178,0.7377174223407815,-0.07452651462786448,-0.09191360058294247,0.09235873974156737,1.0,-0.1442217951546995,0.1474970967590177,-0.13775421017328537,-0.012433552113397951,-0.05554033815922366,0.030752915562667477]
[0.5980727896311432,0.5637502466117856,-0.10391684981974374,0.4837318133173261,0.5776358344888646,-0.012748431948435638,-0.1442217951546995,1.0,-0.4821703677188278,0.45913599979461,0.1924660786942314,-0.051961854744071036,-0.15855325510271892]
[-0.275457964016695,-0.25833901797305675,0.15394701540869826,-0.2527455846177266,-0.236216910508503,0.034673811218226804,0.1474970967590177,-0.4821703677188278,1.0,-0.9322703300624003,-0.17603330492254612,0.1802882037032383,0.010312385129629328]
[0.3430423783411896,0.34996218926364303,-0.14208959758542947,0.29332560072857117,0.28222102385964243,-0.03140334035914296,-0.13775421017328537,0.45913599979461,-0.9322703300624003,1.0,0.1786398062840606,-0.1832983149883141,-0.00796096279993371]
[0.24234512440839717,0.16382169811637828,-0.031749541741814075,0.26798996748531506,0.3275464785706333,0.007517857899523005,-0.012433552113397951,0.1924660786942314,-0.17603330492254612,0.1786398062840606,1.0,-0.6175510218742946,-0.5229964523829367]
[-0.0987517575884239,-0.04943252002957333,0.017401937350148833,-0.17880683968872219,-0.13639782117662738,-0.004332638565611953,-0.05554033815922366,-0.051961854744071036,0.1802882037032383,-0.1832983149883141,-0.6175510218742946,1.0,-0.30836606466602967]
[-0.16249744106600564,-0.1117118654770791,-0.01692629359464072,-0.10995657109246244,-0.23031658928206455,-0.011111574148280646,0.030752915562667477,-0.15855325510271892,0.010312385129629328,-0.00796096279993371,-0.5229964523829367,-0.30836606466602967,1.0]

corr.toDense.rowIter.foreach( x => {
  val size = x.size
  for ( i <- Range(0,size)) { 
    val elem = x(i)
    print(f"$elem%.3f\t") 
  }
  println
})
// "bathrooms","bedrooms","floors","parkingSpaces","suites","unitFloor","unitsOnTheFloor","usableAreas","unitVect","zoneVect"
1.000   0.666   -0.045  0.488   0.753   0.008   -0.107  0.598   -0.275  0.343  0.242    -0.099  -0.162
0.666   1.000   -0.082  0.467   0.601   -0.007  -0.131  0.564   -0.258  0.350  0.164    -0.049  -0.112
-0.045  -0.082  1.000   -0.048  -0.048  0.121   0.738   -0.104  0.154   -0.142 -0.032   0.017   -0.017
0.488   0.467   -0.048  1.000   0.485   0.004   -0.075  0.484   -0.253  0.293  0.268    -0.179  -0.110
0.753   0.601   -0.048  0.485   1.000   0.005   -0.092  0.578   -0.236  0.282  0.328    -0.136  -0.230
0.008   -0.007  0.121   0.004   0.005   1.000   0.092   -0.013  0.035   -0.031 0.008    -0.004  -0.011
-0.107  -0.131  0.738   -0.075  -0.092  0.092   1.000   -0.144  0.147   -0.138 -0.012   -0.056  0.031
0.598   0.564   -0.104  0.484   0.578   -0.013  -0.144  1.000   -0.482  0.459  0.192    -0.052  -0.159
-0.275  -0.258  0.154   -0.253  -0.236  0.035   0.147   -0.482  1.000   -0.932 -0.176   0.180   0.010
0.343   0.350   -0.142  0.293   0.282   -0.031  -0.138  0.459   -0.932  1.000  0.179    -0.183  -0.008
0.242   0.164   -0.032  0.268   0.328   0.008   -0.012  0.192   -0.176  0.179  1.000    -0.618  -0.523
-0.099  -0.049  0.017   -0.179  -0.136  -0.004  -0.056  -0.052  0.180   -0.183 -0.618   1.000   -0.308
-0.162  -0.112  -0.017  -0.110  -0.230  -0.011  0.031   -0.159  0.010   -0.008 -0.523   -0.308  1.000

// bathrooms x suites = 0.753 can be considered as multicolinear
// floors x unitFloor = 0.738 can be considered as multicolinear


// ----- building the logistic regression model

import org.apache.spark.ml.feature.StandardScaler
val stdScaler = new StandardScaler().
setWithStd(true).
setWithMean(true).
setInputCol("features").
setOutputCol("scaledFeatures")

import org.apache.spark.ml.regression.LinearRegression
val lr = new LinearRegression
lr.setRegParam(0.01).setMaxIter(500).setFitIntercept(true).setFeaturesCol("scaledFeatures")

import org.apache.spark.ml.Pipeline

val pipeline = new Pipeline().setStages(Array(dfrawIndexer1,dfrawIndexer2,dfrawIndexer11,dfrawIndexer21,va,stdScaler,lr))

val Array(trainingData, testData) = df3.randomSplit(Array(0.7,0.3),11L)

trainingData.cache
testData.cache

val model = pipeline.fit(trainingData)

val pred = model.transform(testData)

import org.apache.spark.ml.evaluation.RegressionEvaluator
val bceval = new RegressionEvaluator()

bceval.setMetricName("rmse").evaluate(pred)
res2: Double = 801148.7739833856

bceval.setMetricName("r2").evaluate(pred)
res3: Double = 0.6672826004184194

import org.apache.spark.ml.regression.LinearRegressionModel
val lrmodel = model.stages(6).asInstanceOf[LinearRegressionModel]

lrmodel.summary.rootMeanSquaredError
res21: Double = 811065.8035949243

lrmodel.summary.r2
res20: Double = 0.6610871475258102

println(s"LR Model coefficients:\n${lrmodel.coefficients.toArray.mkString("\n")}")
LR Model coefficients:
111925.84694184328
95871.9878330738
1040.127542838459
106629.79568517774
304508.6422879161
5148.511986150182
-36935.07939441638
745480.4677768146
186659.43398736947
-40841.115993940766
-145910.17986841025
276873.9398438109
-133569.54195837153

-------------------

import org.apache.spark.ml.tuning.{ParamGridBuilder, CrossValidator}

val paramGrid = new ParamGridBuilder().
addGrid(lr.regParam, Array(0.1, 0.01, 0.001)).
addGrid(lr.fitIntercept).
addGrid(lr.maxIter, Array(100,300,500)).build()

import org.apache.spark.ml.evaluation.RegressionEvaluator

val cv = new CrossValidator().
setEstimator(pipeline).
setEvaluator(new RegressionEvaluator).
setEstimatorParamMaps(paramGrid).
setNumFolds(3)

val model = cv.fit(trainingData)

import org.apache.spark.ml.PipelineModel
val bestmodel = model.bestModel.asInstanceOf[PipelineModel]

val pred = bestmodel.transform(testData)

val bceval = new RegressionEvaluator()

bceval.setMetricName("rmse").evaluate(pred)
res22: Double = 801148.7741669366

bceval.setMetricName("r2").evaluate(pred)
res23: Double = 0.6672826002659618

import org.apache.spark.ml.regression.LinearRegressionModel
val lrmodel = bestmodel.stages(6).asInstanceOf[LinearRegressionModel]

lrmodel.getRegParam
res1: Double = 0.1

lrmodel.getMaxIter
res2: Int = 100

lrmodel.getFitIntercept
res4: Boolean = true

lrmodel.getStandardization
res5: Boolean = true

lrmodel.summary.rootMeanSquaredError
res24: Double = 811065.8035949261

lrmodel.summary.r2
res25: Double = 0.6610871475258087

println(s"LR Model coefficients:\n${lrmodel.coefficients.toArray.mkString("\n")}")
LR Model coefficients:
111925.88487763188
95872.01978336138
1040.1270904670919
106629.80615988783
304508.6225105693
5148.511751951696
-36935.07809357961
745480.3645317926
186659.2944089447
-40841.22038500527
-145910.1611723802
276873.9412833456
-133569.5325211357
